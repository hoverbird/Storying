<%#
Heh heh... I like #3 a lot -- it's like, the most spastic & indecisive publisher in the world. "Announcing our fall lineup of... 3,000 books!!?"

Okay I am just going to go ahead & try to jam on some pseudo-code right here -- this is going to be really rough/random!
%>

<% story 	 = Storying::Story.new %>
<% hero 	 = story.hero %>
<% setting = story.setting %>
<% support = story.supporting_character %>

For every time and place, there is a hero. In this case, one with a <%= hero.characteristic %> who is <%= hero.relationship_to_setting %>.

Introduce supporting character (support) <%= ", a villain, " if support.villain? %> with a <%= support.characteristic %>.

support has always been a <%= support.relationship_to_hero %> to <%= hero.gendered_personal_pronoun %>.

<% unless support.villain? %>
	<% villain = Storying::SupportingCharacter.new(:story => story, :villain => true) %>

Little does our hero know, <%= hero.gendered_possesive_adjective %> own <%= villain.relationship_to_hero %> who would threaten it all.

<% end %>

Introduce CONFLICT, optionally involving support or <%= setting %>.

Repeat N times: Apply TWIST to hero, support, or villain.
Each iteration: is CONFLICT a MacGuffin? If so: reveal TRUE CONFLICT. Retroactively inject seed of TRUE CONFLICT into introduction of hero, setting, support or villain.

Decide whether hero or villain is victorious.

Apply CONSEQUENCE for hero, support, villain and/or <%= setting %>.

<%#
Hmm feels like there are too many primitive types... maybe it's possible to collapse some of them together?

Just a weird first pass -- hack on it!
%>